library(dplyr)
library(Dict)
library(outbreakinfo)
#states=c("Iowa","Minnesota","Michigan","North Dakota", "New Jersey", "Oklahoma", "Pennsylvania", "Rhode Island", "Wisconsin","New York","Arizona","South Dakota")
states =c("Iowa")
lineage_dat_dic = getCuratedLineages()
`%like%` <- function (x, pattern) {
grepl(pattern, x, ignore.case=TRUE)
}
## Adding WHO names to each of the variants see in pull above.
for (state in states){
print(paste("##############",state,"##############"))
temp = read.csv(paste("./",state,"_data_dump.csv", sep = ''))
aa<-c()
dd <- Dict$new(
info = 'Dict to speed up search time.'
)
for (i in temp$lineage){
if (is.null(dd$get(i))){
#a<-which(lineage_dat_dic$searchTerms %like% i)
a<-which(lineage_dat_dic$reportQuery$pango %like% i)
#if ((length(a) > 0 | length(b) >0) & (i != "")) {
if (length(a) > 0 & (i != "")) {
ind = a[1]
term=lineage_dat_dic$label[ind]
print(paste(i,term, sep=' - '))
dd[i] <- term
aa = append(aa,term)
}
else{
if(i != ""){
dd[i]=NA
}
aa = append(aa,NA)
}}
else{
aa = append(aa,dd$get(i))
}
}
temp$term <- aa
write.csv(temp, paste("./",state,"_data-pangoterms.csv", sep = ''))
}
states=c("Iowa","Minnesota","Michigan","North Dakota", "New Jersey", "Oklahoma", "Pennsylvania", "Rhode Island", "Wisconsin","New York","Arizona","South Dakota")
authenticateUser()
states=c("Iowa","Minnesota","Michigan","North Dakota", "New Jersey", "Oklahoma", "Pennsylvania", "Rhode Island", "Wisconsin","New York","Arizona","South Dakota")
#Pulling lineages for each of the states above.
for (state in states){
print(state)
df = getAllLineagesByLocation(location = state, other_threshold=0.001, nday_threshold=10, ndays = 1200, cumulative = F)
write.csv(df, paste("./",state,"_data_dump.csv", sep = ''))
}
library(dplyr)
library(Dict)
library(outbreakinfo)
authenticateUser()
states=c("Connecticut")
#Pulling lineages for each of the states above.
for (state in states){
print(state)
df = getAllLineagesByLocation(location = state, other_threshold=0.001, nday_threshold=10, ndays = 1200, cumulative = F)
write.csv(df, paste("./",state,"_data_dump.csv", sep = ''))
}
lineage_dat_dic = getCuratedLineages()
`%like%` <- function (x, pattern) {
grepl(pattern, x, ignore.case=TRUE)
}
## Adding WHO names to each of the variants see in pull above.
for (state in states){
print(paste("##############",state,"##############"))
temp = read.csv(paste("./",state,"_data_dump.csv", sep = ''))
aa<-c()
dd <- Dict$new(
info = 'Dict to speed up search time.'
)
for (i in temp$lineage){
if (is.null(dd$get(i))){
#a<-which(lineage_dat_dic$searchTerms %like% i)
a<-which(lineage_dat_dic$reportQuery$pango %like% i)
#if ((length(a) > 0 | length(b) >0) & (i != "")) {
if (length(a) > 0 & (i != "")) {
ind = a[1]
term=lineage_dat_dic$label[ind]
print(paste(i,term, sep=' - '))
dd[i] <- term
aa = append(aa,term)
}
else{
if(i != ""){
dd[i]=NA
}
aa = append(aa,NA)
}}
else{
aa = append(aa,dd$get(i))
}
}
temp$term <- aa
write.csv(temp, paste("./",state,"_data-pangoterms.csv", sep = ''))
}
library(Dict)
library(outbreakinfo)
authenticateUser()
states=c("Connecticut")
df = getAllLineagesByLocation(location = state, other_threshold=0.0001, nday_threshold=10, ndays = 1200, cumulative = F)
df = getAllLineagesByLocation(location = state, other_threshold=0.00001, nday_threshold=10, ndays = 1200, cumulative = F)
df = getAllLineagesByLocation(location = state, other_threshold=0.00001, nday_threshold=10, ndays = 1300, cumulative = F)
write.csv(df, paste("./",state,"_data_dump-01.csv", sep = ''))
df = getAllLineagesByLocation(location = state, other_threshold=0.00001, nday_threshold=50, ndays = 1300, cumulative = F)
states=c("New York")
#Pulling lineages for each of the states above.
for (state in states){
print(state)
df = getAllLineagesByLocation(location = state, other_threshold=0.00001, nday_threshold=50, ndays = 1300, cumulative = F)
write.csv(df, paste("./",state,"_data_dump-01.csv", sep = ''))
}
states=c("Connecticut","Iowa","Minnesota","Michigan","North Dakota", "New Jersey", "Oklahoma", "Pennsylvania", "Rhode Island", "Wisconsin","New York","Arizona","South Dakota")
length(states)
#Pulling lineages for each of the states above.
for (state in states){
print(state)
df = getAllLineagesByLocation(location = state, other_threshold=0.00001, nday_threshold=50, ndays = 1300, cumulative = F)
write.csv(df, paste("./",state,"_raw-01.csv", sep = ''))
}
states=c("Minnesota","Michigan","North Dakota", "New Jersey", "Oklahoma", "Pennsylvania", "Rhode Island", "Wisconsin","New York","Arizona","South Dakota")
length(states)
#Pulling lineages for each of the states above.
for (state in states){
print(state)
df = getAllLineagesByLocation(location = state, other_threshold=0.00001, nday_threshold=50, ndays = 1300, cumulative = F)
write.csv(df, paste("./",state,"_raw-01.csv", sep = ''))
}
authenticateUser()
library(outbreakinfo)
authenticateUser()
library(dplyr)
library(Dict)
library(outbreakinfo)
authenticateUser()
authenticateUser()
authenticateUser()
authenticateUser()
states=c("Connecticut","Iowa","Minnesota","Michigan","North Dakota", "New Jersey", "Oklahoma", "Pennsylvania", "Rhode Island", "Wisconsin","New York","Arizona","South Dakota")
length(states)
#Pulling lineages for each of the states above.
for (state in states){
print(state)
df = getAllLineagesByLocation(location = state, other_threshold=0.00001, nday_threshold=50, ndays = 1300, cumulative = F)
write.csv(df, paste("./",state,"_raw-01.csv", sep = ''))
}
q()
