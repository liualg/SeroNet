import pandas as pd
from os import path
import os
import seronetFunctions as sfxn
import shutil
import glob
from tqdm import tqdm

PMIDS = ['35765315','35703544', '35090596', '35977496', '36043176', '32678685', '33602725', '33160316', '34130883', '33035201', '33983379', '35704428', '34910927', '34250518', '34652783', '35129576', '33961839', '33495307', '35584183', '34961848', '35877413', '35313451', '35857623', '33795870', '35092678', '33440148', '35337753', '34607452', '34960674', '38875334', '36351430', '34260834', '34696403', '35085183', '37034427', '37548476', '34096051', '35857583', '35233550', '36222529', '37117056', '34767812', '36173112', '34706273', '36044993', '36044897', '34921308', '37376419', '35752198', '38567194', '35262027', '34086877', '35915094', '38022602', '35881010', '34075366', '34145263', '34687893', '34739850', '34812429', '32941787', '34937699', '33727331', '37452024', '35143473', '35589681', '35436146', '33915337', '35614113', '33932848', '33065030', '36523164', '38532547', '35590141', '33589825', '34705477', '38308155', '35464463', '34368647', '35932763', '35881005', '34230917', '36240764', '34485950', '35390296', '36454813', '35459461', '33743211', '38578049', '34469363', '36213181', '36191537', '35148837', '35335012', '35457559', '34652962', '38112467', '35081612', '37738970', '34862384', '37822504', '36546661', '36630611', '33561010', '36528815', '37182520', '35976000', '34424479', '36881867', '33292895', '36652339', '36597886', '37264688', '34242572', '36861088', '37195913', '35833684', '36058184', '34047304', '36749632', '35839768', '36880581', '37465682', '34270939', '35632708', '34523968', '36298561', '37589423', '34095338', '35150638', '34131024', '37674985', '36975207', '37872011', '36000735', '34669512', '38312474', '34353890', '37863065', '35835107', '36246273', '34308390', '36595218', '34952892', '35289637', '35217407', '34107529', '35891175', '38014049', '35040666', '35013325', '33893169', '38620871', '35180044', '35025672', '35504289', '37148877', '36644323', '37535402', '34242577', '34835041', '37514950', '34003112', '37771045', '37182564', '36302778', '34861167', '34150933', '35994287', '35959783', '35430229', '35978191', '34664987', '35258323', '38900738', '37093505', '34056628', '35055463', '34452006', '35197000', '38580714', '35605428', '33276369', '33666169', '34587763', '34320281', '35102312', '36056073', '35073738', '37520727', '35759727', '33547084', '34759001', '33427208', '36962865', '36882240', '38793767', '35191769', '36680154', '33571162', '34688034', '35294809', '33846272', '35174389', '36913381', '36192374', '33207184', '33947773', '33704352', '36962464', '35284808', '37213435', '36115801', '34965855', '33472939', '37384638', '35764643', '33993265', '37695910', '33692201', '34877479', '35868417', '34648703', '35526534', '35132398', '36889306', '38096903', '34584899', '33971664', '35976993', '34013339', '34308124', '37965140', '33408181', '33288645', '36136995', '36686629', '35798000', '34001652', '35704758', '37796985', '35762593', '37161609', '36314635', '33579769', '34546094', '38591890', '37575243', '37777967', '36697312', '33479118', '33622794', '36135380', '37494473', '32884153', '33211672', '35289114', '34802457', '33688034', '35259002', '35380510', '33142304', '33031744', '34644239', '35857635', '33798476', '36008435', '36773929', '35372243', '33727353', '34188786', '36927068', '38300113', '34083451', '37312418', '36016189', '34233096', '34824251', '38456511', '39339912', '35764089', '35166573', '35455241', '35037030', '36625591', '37104041', '35348368', '36069925', '33169014', '35061630', '38063388', '37191544', '37023746', '35576468', '34624208', '34115964', '38507240', '34794169', '37749254', '34957381', '35438751', '37584345', '35483404', '33184236', '37365606', '37249415', '37819267', '34383889', '36906295', '34133941', '34253053', '33775692', '35798721', '35090580', '33846703', '36622349', '37239587', '39024099', '36260835', '34214046', '38607917', '37322179', '34605900', '33478949', '34151306', '36781879', '33720347', '34664972', '38291080', '38380946', '33589636', '37672567', '38702297', '34161961', '34521836', '38350990', '36322776', '35019677', '34687733', '36480499', '33476549', '36625657', '34730254', '34797899', '33767426', '36417525', '37606046', '37000623', '39052608', '38299308', '38566610', '35731894', '35587682', '35389888', '35427477', '35879545', '35480625', '39026530', '36208629', '34951746', '36172366', '35607747', '33735607', '36511813', '35801588', '35881018', '35588457', '37287128', '36752204', '37082529', '35857529', '34250512', '38961063', '34942634', '34431693', '37676044', '39292671', '34792136', '37872311', '37104089', '34726473', '37858337', '33822097', '35666264', '34594341', '39240187', '35756977', '34835131', '37104046', '36476380', '33830946', '37443074', '38992013', '37995467', '33521695', '37520727', '36115801', '36050304']

drive = "/Users/liualg/Library/CloudStorage/OneDrive-SharedLibraries-NationalInstitutesofHealth"
share_point = os.path.join(drive,"NCI-SeroNet - SeroNet Public Data Curation RESTRICTED")
# else: 
# 	print("User has windows")
# 	share_point = os.path.join("Users",os.getlogin(), "OneDrive-SharedLibraries-NationalInstitutesofHealth", "NCI-SeroNet - SeroNet Public Data Curation RESTRICTED")

#File Paths
cloud_drive = share_point

def copy_files(pmid):
	# if platform == "darwin":
	
	if os.path.isdir(cloud_drive):
		try:
			BASE_DIR = sfxn.traverse_dir(cloud_drive, pmid)
			templated_data = path.join(BASE_DIR,'templated_data')
			for x in os.listdir(templated_data):
				if x.endswith(".xlsm"):
					# print(x)
					shutil.copy(path.join(templated_data,x),"/Users/liualg/Desktop/ImmPort_template_dump/")

		except FileNotFoundError:
			sys.exit("ERROR:: Incorrect Template format. Cannot Find File")

for p in tqdm(PMIDS):
	copy_files(pmid=p)